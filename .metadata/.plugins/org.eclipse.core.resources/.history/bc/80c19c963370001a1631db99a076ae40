/*
 * bsp.c
 *
 *  Created on: 27 mars 2020
 *      Author: pc
 */

#include "stm32f7xx.h"

/*
 * BSP_Console_Init()
 * USART2 @ 115200 Full Duplex
 * 1 start - 8-bit - 1 stop
 * TX -> PD8 (AF7)
 * RX -> PD9 (AF7)
 */

void BSP_Console_Init()
{
	// Enable GPIOA clock
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIODEN;

//	// Configure PD8 and PD9 as Alternate function
	GPIOD->MODER &= ~(GPIO_MODER_MODER8_Msk | GPIO_MODER_MODER9_Msk);
	GPIOD->MODER |= (0x02 <<GPIO_MODER_MODER8_Pos) | (0x02 <<GPIO_MODER_MODER9_Pos);

//	// Set PD8 and PD9 to AF7 (USART3)
	GPIOD->AFR[2] &=  ~(0x000000FF);
	GPIOD->AFR[2] |=   (0x00000077);
//
//	// Enable USART2 clock
//	RCC -> APB1ENR |= RCC_APB1ENR_USART2EN;
//
//	// Clear USART2 configuration (reset state)
//	// 8-bit, 1 start, 1 stop, CTS/RTS disabled
//	USART2->CR1 = 0x00000000;
//	USART2->CR2 = 0x00000000;
//	USART2->CR3 = 0x00000000;
//
//	// Select PCLK (APB1) as clock source
//	// PCLK -> 48 MHz
//	RCC->CFGR3 &= ~RCC_CFGR3_USART2SW_Msk;
//
//	// Baud Rate = 115200
//	// With OVER8=0 and Fck=48MHz, USARTDIV =   48E6/115200 = 416.6666
//	// BRR = 417 -> Baud Rate = 115107.9137 -> 0.08% error
//	//
//	// With OVER8=1 and Fck=48MHz, USARTDIV = 2*48E6/115200 = 833.3333
//	// BRR = 833 -> Baud Rate = 115246.0984 -> 0.04% error (better)
//
//	USART2->CR1 |= USART_CR1_OVER8;
//	USART2->BRR = 833;
//
//	// Enable both Transmitter and Receiver
//	USART2->CR1 |= USART_CR1_TE | USART_CR1_RE;
//
//	// Enable USART2
//	USART2->CR1 |= USART_CR1_UE;
}
